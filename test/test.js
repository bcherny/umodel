// Generated by CoffeeScript 1.6.3
var Model;

Model = require('../umodel');

exports.umodel = {
  init: function(test) {
    var actual, expected, model;
    model = new Model({
      foo: bar
    });
    actual = model._data.foo;
    expected = 'bar';
    test.equal(actual, expected, 'initializes with data');
    model = new Model({}, {
      separator: '.'
    });
    actual = model.options.separator;
    expected = '.';
    test.equal(actual, expected, 'initializes with options');
    return test.done();
  },
  get: function(test) {
    var actual, err, expected, model;
    model = new Model;
    model._data = {
      foo: 'bar',
      baz: {
        moo: 'boo'
      }
    };
    actual = model.get('foo');
    expected = 'bar';
    test.equal(actual, expected, 'shallow get');
    actual = model.get('baz/moo');
    expected = 'boo';
    test.equal(actual, expected, 'deep get');
    err = function() {
      return model.get('woo');
    };
    test.throws(err, null, 'getting an undefined key throws an error');
    return test.done();
  },
  set: function(test) {
    var actual, expected, model;
    model = new Model;
    model.set('foo', 'bar');
    actual = model._data.foo;
    expected = 'bar';
    test.equal(actual, expected, 'shallow set');
    model.set('baz/moo', 'boo');
    actual = model._data.baz.moo;
    expected = 'boo';
    test.equal(actual, expected, 'deep set');
    return test.done();
  },
  setnx: function(test) {
    var actual, expected, model;
    model = new Model;
    model.setnx('foo', 'bar');
    actual = model._data.foo;
    expected = 'bar';
    test.equal(actual, expected, 'shallow setnx sets');
    model.setnx('foo', 'baz');
    actual = model._data.foo;
    expected = 'bar';
    test.equal(actual, expected, 'shallow setnx does not override once set');
    model.setnx('baz/moo', 'boo');
    actual = model._data.baz.moo;
    expected = 'boo';
    test.equal(actual, expected, 'deep setnx sets');
    model.setnx('baz/moo', 'woo');
    actual = model._data.baz.moo;
    expected = 'boo';
    test.equal(actual, expected, 'deep setnx sets does not override once set');
    return test.done();
  }
};
